#!/bin/bash

INSTALL_SERVERPACKS=false
INSTALL_DELETE_BEHAVIOUR=delete-same

SELFDIR=$(dirname $(readlink -se "${BASH_SOURCE[0]}"))
source $SELFDIR/source-pk3-utils.sh

BROKEN_DIR=$MOVETO_ROOT/broken

REPACKAGE_NAME=pk3-repackage
REPACKAGE=$SELFDIR/$REPACKAGE_NAME
GEN_MAPINFO=$SELFDIR/pk3-gen-mapinfo
FIND_MAP=$SELFDIR/pk3-find-map

function show_help()
{
	echo -e "\e[1mNAME\e[0m"
	echo -e "\t$0 - Install pk3 files"
	echo
	echo -e "\e[1mSYNOPSIS\e[0m"
	echo -e "\t\e[1m$0\e[0m [\e[4moptions\e[0m...] \e[4mfile\e[0m..."
	echo -e "\t\e[1m$0\e[0m \e[1mhelp\e[0m|\e[1m-h\e[0m|\e[1m--help\e[0m"
	echo
	echo -e "\e[1mDESCRIPTION\e[0m"
	echo -e "\t\e[1m$0\e[0m calls \e[4m$REPACKAGE_NAME\e[0m to check and (if needed) fix the pk3."
	echo -e "\tpk3s that are broken or in an invalid format will be moved to" 
	echo -e "\t\e[1m$BROKEN_DIR\e[0m."
	echo -e "\tThen the fixed pk3s will be installed in the following directories:"
	for i_d in ${ALL_PK3_DIRS[@]}
	do
		echo -e "\t * \e[1m$i_d\e[0m"
	done
	echo
	echo -e "\e[1mOPTIONS\e[0m"
	echo -e "\e[1m--server-pk3\e[22m|\e[1m+s\e[0m"
	echo -e "\tInstall both maps and serverpackages (off by default)"
	echo -e "\e[1m--no-server-pk3\e[22m|\e[1m-s\e[0m"
	echo -e "\tInstall only maps (default)"
	echo -e "\e[1m--delete=\e[22;4mmode\e[0m"
	echo -e "\tHow to check whether the original pk3 has to be removed. Possible values:"
	echo -e "\t *:\e[1mask\e[0m:Always ask
\t *:\e[1mdelete\e[0m:Always delete
\t *:\e[1mdelete-installed\e[0m:Delete if the map has been installed
\t *:\e[1mdelete-same\e[0m:Delete if the map has been installed without change (default)
\t *:\e[1mkeep\e[0m:Don't delete it" | column -t -c 3 -s ":"
	echo
}

if [ $# -eq 0 ]
then
	show_help
	exit
fi

for arg in $@
do
	case $arg in 
		*.pk3)
			pk3=$arg
			installed=false
			installed_noprob=false
			
			if ! zipinfo -1 $pk3 >/dev/null 2>&1
			then
				echo -e "\e[31;1m$pk3\e[22m is a bad archive\e[0m"
				mv $pk3 $BROKEN_DIR
			else
				if $INSTALL_SERVERPACKS || pk3_is_map $pk3
				then
				
					echo -e "\e[1m$pk3\e[0m"
					echo "Checking for installed maps..."
					declare -i already_installed
					let already_installed=0
					for map in $(pk3_maps $pk3)
					do
						map_base=$(basename $pk3 .pk3)
						if $FIND_MAP $map_base
						then
							let already_installed++
						fi
					done
					
					echo "$already_installed maps may be already installed."
					
					if [ $already_installed -eq 0 ] || ask_permission "Install anyway?"
					then
						if ! $REPACKAGE just-check $pk3
						then
							$REPACKAGE fix --suffix=$RENAME_SUFFIX $pk3
							pk3=`$REPACKAGE name --suffix=$RENAME_SUFFIX $pk3`
						else
							installed_noprob=true
						fi # repackage
						
						pk3_basename=`basename $pk3`

						for i_d in ${ALL_PK3_DIRS[@]}
						do
							installed=true
							rm -f $i_d/$pk3_basename
							cp $pk3 $i_d || installed=false
						done
						
						if $installed
						then
							$GEN_MAPINFO $i_d/$pk3_basename
							echo -e "\e[34;1m$pk3\e[22m has been installed\e[0m"
						else
							echo -e "\e[31;1m$pk3\e[22m has NOT been properly installed\e[0m"
						fi # installed
						
					fi # not already installed or user said OK
					
				else
					echo -e "\e[31;1m$pk3\e[22m is not a map pk3\e[0m"
				fi # install serverpacks or is map
				
				case $INSTALL_DELETE_BEHAVIOUR in
					ask)
						rm -i $arg
						;;
					delete)
						echo -e "Removing \e[1m$arg\e[0m (forced)"
						rm -f $arg
						;;
					delete-same)
						if $installed && $installed_noprob
						then
							echo -e "Removing \e[1m$arg\e[0m (Moved to installation dirs)"
							rm -f $arg
						else
							echo -e "Keeping \e[1m$arg\e[0m"
						fi
						;;
					delete-installed)
						if $installed
						then
							echo -e "Removing \e[1m$arg\e[0m (Moved to installation dirs)"
							rm -f $arg
						else
							echo -e "Keeping \e[1m$arg\e[0m (Not installed)"
						fi
						;;
					*)
						echo -e "Keeping \e[1m$arg\e[0m"
						;;
				esac
					
			fi # pk3 is a zip file
			;;
		help|--help|-h)
			show_help
			;;
		--server-pk3|\+s)
			INSTALL_SERVERPACKS=true
			;;
		--no-server-pk3|-s)
			INSTALL_SERVERPACKS=false
			;;
		--delete=*)
			INSTALL_DELETE_BEHAVIOUR=${arg#*=}
			;;
		*)
			echo Skipping unknown option $arg
			;;
	esac
done
